name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Docker image (${{ matrix.platform }})

    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sharkyrawr/node-docker-buildenv
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/node-docker-buildenv
          tags: |
            type=raw,value=latest
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=ghcr.io/sharkyrawr/node-docker-buildenv,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=build-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=build-${{ matrix.platform }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ strategy.job-index }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    name: Create multi-arch manifest
    needs: [build]

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/sharkyrawr/node-docker-buildenv
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/node-docker-buildenv
          tags: |
            type=raw,value=latest
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf 'ghcr.io/sharkyrawr/node-docker-buildenv@sha256:%s ' *)

      - name: Push to Docker Hub
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create \
            -t docker.io/${{ vars.DOCKERHUB_USERNAME }}/node-docker-buildenv:latest \
            $(printf 'ghcr.io/sharkyrawr/node-docker-buildenv@sha256:%s ' *)

      - name: Inspect image
        id: inspect
        run: |
          docker buildx imagetools inspect ghcr.io/sharkyrawr/node-docker-buildenv:latest --format '{{json .}}' > /tmp/ghcr-inspect.json
          docker buildx imagetools inspect docker.io/${{ vars.DOCKERHUB_USERNAME }}/node-docker-buildenv:latest --format '{{json .}}' > /tmp/dockerhub-inspect.json
          echo "ghcr_digest=$(jq -r '.manifest.digest' /tmp/ghcr-inspect.json)" >> $GITHUB_OUTPUT
          echo "dockerhub_digest=$(jq -r '.manifest.digest' /tmp/dockerhub-inspect.json)" >> $GITHUB_OUTPUT

      - name: Generate artifact attestation (Docker Hub)
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: docker.io/${{ vars.DOCKERHUB_USERNAME }}/node-docker-buildenv
          subject-digest: ${{ steps.inspect.outputs.dockerhub_digest }}
          push-to-registry: true

      - name: Generate artifact attestation (GHCR)
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/sharkyrawr/node-docker-buildenv
          subject-digest: ${{ steps.inspect.outputs.ghcr_digest }}
          push-to-registry: true
